# Apache Reverse Proxy Configuration for Honey Badger AI Gifts
# This file should be placed in /etc/apache2/sites-available/ (Ubuntu/Debian)
# or /etc/httpd/conf.d/ (CentOS/RHEL)

# Required Apache modules (enable with a2enmod):
# - proxy
# - proxy_http
# - proxy_wstunnel (for WebSocket support)
# - headers
# - rewrite
# - ssl (for HTTPS)

<VirtualHost *:80>
    ServerName your-domain.com
    ServerAlias www.your-domain.com
    ServerAdmin admin@your-domain.com

    # Logging
    ErrorLog ${APACHE_LOG_DIR}/honeybadger-error.log
    CustomLog ${APACHE_LOG_DIR}/honeybadger-access.log combined

    # Document root (for static files)
    DocumentRoot /var/www/honeybadger

    # Serve static files directly
    <Directory /var/www/honeybadger/assets>
        Options -Indexes +FollowSymLinks
        AllowOverride None
        Require all granted

        # Cache static assets for 1 year
        <IfModule mod_expires.c>
            ExpiresActive On
            ExpiresDefault "access plus 1 year"
        </IfModule>

        <IfModule mod_headers.c>
            Header set Cache-Control "public, immutable"
        </IfModule>
    </Directory>

    <Directory /var/www/honeybadger/public>
        Options -Indexes +FollowSymLinks
        AllowOverride None
        Require all granted

        # Cache static assets for 1 year
        <IfModule mod_expires.c>
            ExpiresActive On
            ExpiresDefault "access plus 1 year"
        </IfModule>

        <IfModule mod_headers.c>
            Header set Cache-Control "public, immutable"
        </IfModule>
    </Directory>

    # Security headers
    <IfModule mod_headers.c>
        Header always set X-Frame-Options "SAMEORIGIN"
        Header always set X-Content-Type-Options "nosniff"
        Header always set X-XSS-Protection "1; mode=block"
        Header always set Referrer-Policy "no-referrer-when-downgrade"
    </IfModule>

    # Reverse proxy configuration
    ProxyPreserveHost On
    ProxyRequests Off

    # Proxy to Node.js application on port 3000
    ProxyPass /assets !
    ProxyPass /public !
    ProxyPass / http://localhost:3000/
    ProxyPassReverse / http://localhost:3000/

    # WebSocket support
    RewriteEngine on
    RewriteCond %{HTTP:Upgrade} websocket [NC]
    RewriteCond %{HTTP:Connection} upgrade [NC]
    RewriteRule ^/?(.*) "ws://localhost:3000/$1" [P,L]

    # Set headers for proxied requests
    <Location />
        ProxyPassReverse /
        RequestHeader set X-Forwarded-Proto "http"
        RequestHeader set X-Forwarded-Port "80"
    </Location>
</VirtualHost>

# HTTPS Configuration (uncomment and configure SSL certificates)
# <VirtualHost *:443>
#     ServerName your-domain.com
#     ServerAlias www.your-domain.com
#     ServerAdmin admin@your-domain.com
#
#     # SSL Configuration
#     SSLEngine on
#     SSLCertificateFile /etc/letsencrypt/live/your-domain.com/fullchain.pem
#     SSLCertificateKeyFile /etc/letsencrypt/live/your-domain.com/privkey.pem
#     SSLProtocol all -SSLv2 -SSLv3 -TLSv1 -TLSv1.1
#     SSLCipherSuite HIGH:!aNULL:!MD5
#
#     # Logging
#     ErrorLog ${APACHE_LOG_DIR}/honeybadger-ssl-error.log
#     CustomLog ${APACHE_LOG_DIR}/honeybadger-ssl-access.log combined
#
#     # Document root
#     DocumentRoot /var/www/honeybadger
#
#     # Same configuration as HTTP VirtualHost
#     <Directory /var/www/honeybadger/assets>
#         Options -Indexes +FollowSymLinks
#         AllowOverride None
#         Require all granted
#     </Directory>
#
#     <Directory /var/www/honeybadger/public>
#         Options -Indexes +FollowSymLinks
#         AllowOverride None
#         Require all granted
#     </Directory>
#
#     # Security headers
#     <IfModule mod_headers.c>
#         Header always set X-Frame-Options "SAMEORIGIN"
#         Header always set X-Content-Type-Options "nosniff"
#         Header always set X-XSS-Protection "1; mode=block"
#         Header always set Referrer-Policy "no-referrer-when-downgrade"
#         Header always set Strict-Transport-Security "max-age=63072000"
#     </IfModule>
#
#     # Reverse proxy
#     ProxyPreserveHost On
#     ProxyRequests Off
#     ProxyPass /assets !
#     ProxyPass /public !
#     ProxyPass / http://localhost:3000/
#     ProxyPassReverse / http://localhost:3000/
#
#     # WebSocket support
#     RewriteEngine on
#     RewriteCond %{HTTP:Upgrade} websocket [NC]
#     RewriteCond %{HTTP:Connection} upgrade [NC]
#     RewriteRule ^/?(.*) "ws://localhost:3000/$1" [P,L]
#
#     # Set headers for proxied requests
#     <Location />
#         ProxyPassReverse /
#         RequestHeader set X-Forwarded-Proto "https"
#         RequestHeader set X-Forwarded-Port "443"
#     </Location>
# </VirtualHost>

# Redirect HTTP to HTTPS (uncomment when SSL is configured)
# <VirtualHost *:80>
#     ServerName your-domain.com
#     ServerAlias www.your-domain.com
#     Redirect permanent / https://your-domain.com/
# </VirtualHost>
